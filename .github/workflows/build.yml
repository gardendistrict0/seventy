name: Build, Store Artifacts, and Create PreRelease

on:
  push:
    branches:
      - main

permissions:
  contents: write
  id-token: write
  actions: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Deno for compilation
        uses: denoland/setup-deno@v1
        with:
          deno-version: v1.36.0

      - name: Run build script
        run: |
          deno compile --target x86_64-pc-windows-msvc --output bin/seventy-win main/seventy.ts
          deno compile --target x86_64-apple-darwin --output bin/seventy-mac main/seventy.ts
          deno compile --target aarch64-apple-darwin --output bin/seventy-mac-arm main/seventy.ts
          deno compile --target x86_64-unknown-linux-gnu --output bin/seventy-linux main/seventy.ts

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: bin/

      - name: Compress build artifacts
        run: zip -r build-artifacts.zip bin/

      - name: Authenticate GitHub CLI
        run: gh auth login --with-token < ${{ secrets.GITHUB_TOKEN }}

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: nightly-${{ github.ref_name }}-${{ github.sha }}
          release_name: Nightly Build for ${{ github.ref_name }}
          body: "This is a nightly build."
          prerelease: true

      - name: Upload Release Assets
        run: |
          gh release upload ${{ steps.create_release.outputs.tag_name }} build-artifacts.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
